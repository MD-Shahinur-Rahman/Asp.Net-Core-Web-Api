// <auto-generated />
using System;
using EmployeeManagementWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagementWebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240902111841_dataSeeding")]
    partial class dataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagementWebApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("date");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email = "ashik@gmail.com",
                            EmployeeName = "Ashik Mahmud",
                            ImageName = "ashik.jpg",
                            ImageUrl = "/Upload/mohipic.jpg",
                            IsActive = true,
                            JoinDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 2,
                            Email = "mredul@.com",
                            EmployeeName = "Mredul",
                            ImageName = "Mredul.jpg",
                            ImageUrl = "/Upload/Mredul.jpg",
                            IsActive = true,
                            JoinDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EmployeeManagementWebApi.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExperienceId"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ExperienceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Experience", (string)null);

                    b.HasData(
                        new
                        {
                            ExperienceId = 1,
                            Duration = 24,
                            EmployeeId = 1,
                            Title = "Software Developer"
                        },
                        new
                        {
                            ExperienceId = 2,
                            Duration = 12,
                            EmployeeId = 1,
                            Title = "Senior Developer"
                        },
                        new
                        {
                            ExperienceId = 3,
                            Duration = 36,
                            EmployeeId = 2,
                            Title = "Project Manager"
                        });
                });

            modelBuilder.Entity("EmployeeManagementWebApi.Models.Experience", b =>
                {
                    b.HasOne("EmployeeManagementWebApi.Models.Employee", "Employee")
                        .WithMany("Experiences")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Experience_Employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeManagementWebApi.Models.Employee", b =>
                {
                    b.Navigation("Experiences");
                });
#pragma warning restore 612, 618
        }
    }
}
